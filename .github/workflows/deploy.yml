name: Deploy on AWS

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bitebox:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/bitebox:latest

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          cat <<'EOF' > ~/.ssh/id_rsa
          -----BEGIN OPENSSH PRIVATE KEY-----
          b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtz
          c2gtZWQyNTUxOQAAACDtvhOKx4KkwLZnc57ddU4dUDUgiblrlnxzAtfvFY3q1wAA
          AIih6OSdoejknQAAAAtzc2gtZWQyNTUxOQAAACDtvhOKx4KkwLZnc57ddU4dUDUg
          iblrlnxzAtfvFY3q1wAAAEAwUQIBATAFBgMrZXAEIgQglD6+0Zpfc0NVmhp/2uTY
          fu2+E4rHgqTAtmdznt11Th1QNSCJuWuWfHMC1+8VjerXAAAAAAECAwQF
          -----END OPENSSH PRIVATE KEY-----
          EOF
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 16.16.90.50 >> ~/.ssh/known_hosts


      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_ECP_IP }} << 'EOF'
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/bitebox:latest
            docker stop bitebox || true
            docker rm bitebox || true
            docker run -d --name bitebox -p 80:8000 ${{ secrets.DOCKER_USERNAME }}/bitebox:latest
         
          EOF
        